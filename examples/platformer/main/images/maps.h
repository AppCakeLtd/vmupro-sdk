
// This file is auto-generated by map2h.py and should not be modified manually!

#pragma once
#include <stdio.h>
#include <stdint.h>

typedef struct {
    const char * name;
    const uint32_t index;
    const uint32_t width;   // in tiles
    const uint32_t height;  // in tiles
    const uint32_t rawSize; // in bytes
    const uint32_t rawChecksum;           
    const uint32_t compressedSize;
    const uint8_t* compressedData;
} TileLayer;


const uint8_t _level_0_layer_0_compressed_data[];
const TileLayer tl_level_0_layer_0 = { "level_0_layer_0", 0, 128, 64, 8192, 0x3e17babf, 312, _level_0_layer_0_compressed_data, };

const uint8_t _level_0_layer_1_compressed_data[];
const TileLayer tl_level_0_layer_1 = { "level_0_layer_1", 1, 128, 64, 8192, 0xafac1c44, 998, _level_0_layer_1_compressed_data, };

const uint8_t _level_0_layer_2_compressed_data[];
const TileLayer tl_level_0_layer_2 = { "level_0_layer_2", 2, 128, 64, 108, 0x9a4d7c42, 108, _level_0_layer_2_compressed_data, };

const uint8_t _level_1_layer_0_compressed_data[];
const TileLayer tl_level_1_layer_0 = { "level_1_layer_0", 3, 128, 64, 8192, 0x3e17babf, 312, _level_1_layer_0_compressed_data, };

const uint8_t _level_1_layer_1_compressed_data[];
const TileLayer tl_level_1_layer_1 = { "level_1_layer_1", 4, 128, 64, 8192, 0x12a40b4a, 620, _level_1_layer_1_compressed_data, };

const uint8_t _level_1_layer_2_compressed_data[];
const TileLayer tl_level_1_layer_2 = { "level_1_layer_2", 5, 128, 64, 42, 0x284db54a, 42, _level_1_layer_2_compressed_data, };




/*// force a compile time const without #define
enum{ allTileLayersLength = 6};
const TileLayer * allTileLayers[] = {
  &tl_level_0_layer_0,
  &tl_level_0_layer_1,
  &tl_level_0_layer_2,
  &tl_level_1_layer_0,
  &tl_level_1_layer_1,
  &tl_level_1_layer_2,
};


*/const uint8_t _level_0_layer_0_compressed_data[] ={
0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0x03, 0xC7, 0x01, 0xFF, 0x01, 0xC7, 0x02, 0xFF, 0x01, 0xC7, 0x01, 0xFF, 0x03, 0xC7, 0x02, 0xFF, 0x01, 0xC7, 0x71, 0xFF, 0x01, 0xC7, 0x03, 0xFF, 0x02, 0xC7, 0x01, 0xFF, 0x01, 0xC7, 0x01, 0xFF, 0x01, 0xC7, 0x02, 0xFF, 0x01, 0xC7, 0x01, 0xFF, 0x01, 0xC7, 0x71, 0xFF, 0x03, 0xC7, 0x01, 0xFF, 0x01, 0xC7, 0x01, 0xFF, 0x02, 0xC7, 0x01, 0xFF, 0x01, 0xC7, 0x02, 0xFF, 0x01, 0xC7, 0x01, 0xFF, 0x01, 0xC7, 0x71, 0xFF, 0x01, 0xC7, 0x03, 0xFF, 0x01, 0xC7, 0x02, 0xFF, 0x01, 0xC7, 0x01, 0xFF, 0x01, 0xC7, 0x02, 0xFF, 0x01, 0xC7, 0x73, 0xFF, 0x03, 0xC7, 0x01, 0xFF, 0x01, 0xC7, 0x02, 0xFF, 0x01, 0xC7, 0x01, 0xFF, 0x03, 0xC7, 0x02, 0xFF, 0x01, 0xC7, 0xFF, 0xFF, 0xFF, 0xFF, 0xF9, 0xFF, 0x01, 0x10, 0x0B, 0x11, 0x74, 0xFF, 0x01, 0x10, 0x0B, 0x11, 0x74, 0xFF, 0x01, 0x10, 0x0B, 0x11, 0x74, 0xFF, 0x01, 0x10, 0x0B, 0x11, 0x75, 0xFF, 0x0B, 0x11, 0x6D, 0xFF, 0x01, 0x10, 0x12, 0x11, 0x6D, 0xFF, 0x01, 0x10, 0x12, 0x11, 0x6D, 0xFF, 0x01, 0x10, 0x12, 0x11, 0x6D, 0xFF, 0x01, 0x10, 0x12, 0x11, 0x6D, 0xFF, 0x01, 0x10, 0x12, 0x11, 0x9B, 0xFF, 0x01, 0x13, 0x09, 0x14, 0x01, 0x15, 0x40, 0xFF, 0x01, 0x10, 0x19, 0x11, 0x1B, 0xFF, 0x01, 0x13, 0x09, 0x14, 0x01, 0x15, 0x40, 0xFF, 0x01, 0x10, 0x19, 0x11, 0x0F, 0xFF, 0x01, 0x44, 0x03, 0x14, 0x01, 0x15, 0x07, 0xFF, 0x01, 0x13, 0x09, 0x14, 0x01, 0x15, 0x40, 0xFF, 0x01, 0x10, 0x19, 0x11, 0x04, 0xFF, 0x01, 0xC0, 0x01, 0xC1, 0x01, 0xC3, 0x01, 0xC4, 0x03, 0xFF, 0x01, 0x13, 0x07, 0x14, 0x01, 0x15, 0x07, 0xFF, 0x01, 0x13, 0x09, 0x14, 0x01, 0x15, 0x40, 0xFF, 0x01, 0x10, 0x19, 0x11, 0x1F, 0xFF, 0x06, 0x14, 0x01, 0x15, 0x40, 0xFF, 0x01, 0x10, 0x19, 0x11, 0x1F, 0xFF, 0x06, 0x14, 0x01, 0x15, 0x40, 0xFF, 0x01, 0x10, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x2A, 0xFF
};

const uint8_t _level_0_layer_1_compressed_data[] ={
0x01, 0x62, 0x7E, 0xFF, 0x01, 0x68, 0x01, 0x62, 0x7E, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x7E, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4E, 0xFF, 0x01, 0x83, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4D, 0xFF, 0x01, 0x80, 0x01, 0x83, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4E, 0xFF, 0x01, 0x83, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4E, 0xFF, 0x01, 0x83, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4E, 0xFF, 0x01, 0x83, 0x01, 0x80, 0x2E, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4E, 0xFF, 0x01, 0x83, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4E, 0xFF, 0x01, 0x83, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4D, 0xFF, 0x01, 0x80, 0x01, 0x83, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4E, 0xFF, 0x01, 0x83, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4E, 0xFF, 0x01, 0x8B, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x7E, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x72, 0xFF, 0x01, 0x00, 0x0A, 0x01, 0x01, 0x02, 0x01, 0x95, 0x01, 0x62, 0x7E, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x7E, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x7E, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x03, 0xFF, 0x04, 0x00, 0x47, 0xFF, 0x01, 0x83, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x02, 0xFF, 0x02, 0x00, 0x02, 0xFF, 0x02, 0x00, 0x45, 0xFF, 0x01, 0x80, 0x01, 0x93, 0x04, 0xFF, 0x01, 0x00, 0x08, 0x01, 0x01, 0x02, 0x0E, 0xFF, 0x01, 0x00, 0x06, 0x01, 0x0C, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x02, 0xFF, 0x01, 0x00, 0x04, 0xFF, 0x01, 0x00, 0x46, 0xFF, 0x01, 0x93, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x02, 0xFF, 0x02, 0x00, 0x03, 0xFF, 0x01, 0x00, 0x23, 0xFF, 0x01, 0x95, 0x11, 0xFF, 0x01, 0xB0, 0x01, 0xB1, 0x09, 0x31, 0x01, 0xB1, 0x01, 0xB2, 0x04, 0xFF, 0x01, 0x93, 0x01, 0x80, 0x2E, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x03, 0xFF, 0x01, 0x00, 0x02, 0xFF, 0x02, 0x00, 0x46, 0xFF, 0x01, 0x93, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x03, 0xFF, 0x04, 0x00, 0x30, 0xFF, 0x01, 0x55, 0x01, 0x57, 0x15, 0xFF, 0x01, 0x93, 0x2C, 0xFF, 0x01, 0x95, 0x02, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x32, 0xFF, 0x01, 0x55, 0x04, 0x56, 0x01, 0x57, 0x01, 0x67, 0x14, 0xFF, 0x01, 0x80, 0x01, 0x93, 0x2A, 0xFF, 0x01, 0x95, 0x01, 0xFF, 0x02, 0x95, 0x01, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x19, 0xFF, 0x01, 0x00, 0x09, 0x01, 0x01, 0x02, 0x0E, 0xFF, 0x01, 0x75, 0x04, 0x76, 0x01, 0x77, 0x01, 0x67, 0x15, 0xFF, 0x01, 0x93, 0x15, 0xFF, 0x01, 0x00, 0x19, 0x01, 0x01, 0x95, 0x01, 0x62, 0x2B, 0xFF, 0x01, 0x55, 0x01, 0x56, 0x01, 0x57, 0x05, 0xFF, 0x01, 0x55, 0x04, 0x56, 0x01, 0x57, 0x15, 0xFF, 0x01, 0x93, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x0D, 0xFF, 0x01, 0x03, 0x03, 0x04, 0x01, 0x05, 0x15, 0xFF, 0x01, 0x55, 0x03, 0x56, 0x01, 0x57, 0x01, 0x66, 0x01, 0x67, 0x05, 0xFF, 0x01, 0x75, 0x04, 0x76, 0x01, 0x77, 0x15, 0xFF, 0x01, 0x93, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x09, 0xFF, 0x01, 0x03, 0x02, 0x04, 0x01, 0x05, 0x1A, 0xFF, 0x01, 0x75, 0x03, 0x76, 0x01, 0x77, 0x01, 0x66, 0x01, 0x67, 0x03, 0xFF, 0x01, 0x55, 0x05, 0x56, 0x01, 0x57, 0x01, 0x67, 0x14, 0xFF, 0x01, 0x80, 0x01, 0x93, 0x1B, 0xFF, 0x01, 0x95, 0x0F, 0xFF, 0x01, 0x95, 0x03, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x2B, 0xFF, 0x01, 0x65, 0x01, 0x66, 0x01, 0x67, 0x03, 0xFF, 0x01, 0x75, 0x05, 0x76, 0x01, 0x77, 0x01, 0x67, 0x15, 0xFF, 0x01, 0x93, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x01, 0x02, 0xFF, 0x1B, 0x01, 0x05, 0xFF, 0x01, 0x90, 0x08, 0xFF, 0x01, 0x65, 0x01, 0x66, 0x01, 0x67, 0x04, 0xFF, 0x01, 0x55, 0x05, 0x56, 0x01, 0x57, 0x15, 0xFF, 0x01, 0x93, 0x01, 0x80, 0x17, 0xFF, 0x01, 0x95, 0x03, 0xFF, 0x04, 0x95, 0x06, 0xFF, 0x01, 0x95, 0x08, 0xFF, 0x01, 0x95, 0x01, 0x17, 0x03, 0xFF, 0x1A, 0x17, 0x04, 0xFF, 0x01, 0x90, 0x01, 0xFF, 0x01, 0x90, 0x07, 0xFF, 0x01, 0x75, 0x01, 0x76, 0x01, 0x77, 0x04, 0xFF, 0x01, 0x75, 0x05, 0x76, 0x01, 0x77, 0x15, 0xFF, 0x01, 0x83, 0x15, 0xFF, 0x1B, 0x95, 0x01, 0x17, 0x03, 0xFF, 0x1A, 0x17, 0x62, 0xFF, 0x01, 0x90, 0x03, 0xFF, 0x15, 0x90, 0x67, 0xFF, 0x01, 0x90, 0x17, 0xFF, 0x01, 0x90, 0x67, 0xFF, 0x02, 0x90, 0x16, 0xFF, 0x01, 0x90, 0x67, 0xFF, 0x01, 0x90, 0x01, 0xFF, 0x01, 0x90, 0x15, 0xFF, 0x01, 0x90, 0x67, 0xFF, 0x01, 0x90, 0x01, 0xFF, 0x02, 0x90, 0x14, 0xFF, 0x01, 0x90, 0x67, 0xFF, 0x01, 0x90, 0x02, 0xFF, 0x02, 0x90, 0x13, 0xFF, 0x01, 0x90, 0x12, 0xFF, 0x01, 0x90, 0x54, 0xFF, 0x01, 0x90, 0x03, 0xFF, 0x02, 0x90, 0x12, 0xFF, 0x01, 0x90, 0x12, 0xFF, 0x01, 0x90, 0x54, 0xFF, 0x01, 0x90, 0x04, 0xFF, 0x02, 0x90, 0x11, 0xFF, 0x01, 0x90, 0x12, 0xFF, 0x01, 0x90, 0x07, 0xFF, 0x0E, 0x90, 0x3F, 0xFF, 0x01, 0x90, 0x05, 0xFF, 0x01, 0x90, 0x11, 0xFF, 0x01, 0x90, 0x12, 0xFF, 0x01, 0x90, 0x14, 0xFF, 0x01, 0x90, 0x3F, 0xFF, 0x01, 0x90, 0x05, 0xFF, 0x02, 0x90, 0x10, 0xFF, 0x01, 0x90, 0x12, 0xFF, 0x01, 0x90, 0x14, 0xFF, 0x01, 0x90, 0x3F, 0xFF, 0x01, 0x90, 0x06, 0xFF, 0x01, 0x90, 0x10, 0xFF, 0x01, 0x90, 0x12, 0xFF, 0x01, 0x90, 0x14, 0xFF, 0x01, 0x90, 0x3F, 0xFF, 0x01, 0x90, 0x07, 0xFF, 0x01, 0x90, 0x0F, 0xFF, 0x14, 0x90, 0x14, 0xFF, 0x01, 0x90, 0x3F, 0xFF, 0x01, 0x90, 0x07, 0xFF, 0x02, 0x90, 0x36, 0xFF, 0x01, 0x90, 0x3F, 0xFF, 0x01, 0x90, 0x08, 0xFF, 0x02, 0x90, 0x35, 0xFF, 0x01, 0x90, 0x3F, 0xFF, 0x01, 0x90, 0x09, 0xFF, 0x02, 0x90, 0x34, 0xFF, 0x01, 0x90, 0x3F, 0xFF, 0x01, 0x90, 0x0A, 0xFF, 0x01, 0x90, 0x0C, 0xFF, 0x14, 0x90, 0x14, 0xFF, 0x01, 0x90, 0x3F, 0xFF, 0x01, 0x90, 0x0A, 0xFF, 0x02, 0x90, 0x0B, 0xFF, 0x01, 0x90, 0x0C, 0xFF, 0x01, 0x90, 0x06, 0xFF, 0x02, 0x90, 0x12, 0xFF, 0x01, 0x90, 0x3F, 0xFF, 0x01, 0x90, 0x17, 0xFF, 0x01, 0x90, 0x0C, 0xFF, 0x01, 0x90, 0x07, 0xFF, 0x02, 0x90, 0x11, 0xFF, 0x01, 0x90, 0x3F, 0xFF, 0x01, 0x90, 0x17, 0xFF, 0x01, 0x90, 0x0C, 0xFF, 0x01, 0x90, 0x08, 0xFF, 0x02, 0x90, 0x10, 0xFF, 0x01, 0x90, 0x3F, 0xFF, 0x19, 0x90, 0x0C, 0xFF, 0x01, 0x90, 0x09, 0xFF, 0x02, 0x90, 0x0F, 0xFF, 0x01, 0x90, 0x64, 0xFF, 0x01, 0x90, 0x0A, 0xFF, 0x02, 0x90, 0x0E, 0xFF, 0x01, 0x90, 0x64, 0xFF, 0x01, 0x90, 0x0B, 0xFF, 0x02, 0x90, 0x0D, 0xFF, 0x01, 0x90, 0x64, 0xFF, 0x01, 0x90, 0x0C, 0xFF, 0x02, 0x90, 0x0C, 0xFF, 0x01, 0x90, 0x64, 0xFF, 0x01, 0x90, 0x0D, 0xFF, 0x02, 0x90, 0x0B, 0xFF, 0x01, 0x90, 0x64, 0xFF, 0x01, 0x90, 0x0E, 0xFF, 0x02, 0x90, 0x0A, 0xFF, 0x01, 0x90, 0x64, 0xFF, 0x01, 0x90, 0x1A, 0xFF, 0x01, 0x90, 0x64, 0xFF, 0x01, 0x90, 0x1A, 0xFF, 0x01, 0x90, 0x64, 0xFF, 0x1C, 0x90, 0xFF, 0xFF, 0x40, 0xFF, 0x01, 0x85, 0x7E, 0x86, 0x01, 0x87
};

const uint8_t _level_0_layer_2_compressed_data[] ={
0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x08, 0x00, 0x0D, 0x00, 0xD4, 0x00, 0x05, 0x00, 0x10, 0x00, 0xD0, 0x00, 0x1F, 0x00, 0x16, 0x00, 0xF0, 0x00, 0x10, 0x00, 0x18, 0x00, 0xF0, 0x00, 0x2C, 0x00, 0x18, 0x00, 0xD4, 0x00, 0x10, 0x00, 0x1C, 0x00, 0xF1, 0x00, 0x17, 0x00, 0x1C, 0x00, 0xD4, 0x00, 0x10, 0x00, 0x1D, 0x00, 0xF1, 0x00, 0x7F, 0x00, 0x1F, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x21, 0x00, 0xE1, 0x00, 0x19, 0x00, 0x26, 0x00, 0xE2, 0x00, 0x2B, 0x00, 0x26, 0x00, 0xE3, 0x00, 0x37, 0x00, 0x27, 0x00, 0xF0, 0x00, 0x05, 0x00, 0x32, 0x00, 0xF1, 0x00, 0x18, 0x00, 0x34, 0x00, 0xE1, 0x00, 0x2A, 0x00, 0x35, 0x00, 0xE2, 0x00, 0x40, 0x00, 0x3C, 0x00, 0xE3, 0x00
};

const uint8_t _level_1_layer_0_compressed_data[] ={
0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0x03, 0xC7, 0x01, 0xFF, 0x01, 0xC7, 0x02, 0xFF, 0x01, 0xC7, 0x01, 0xFF, 0x03, 0xC7, 0x02, 0xFF, 0x01, 0xC7, 0x71, 0xFF, 0x01, 0xC7, 0x03, 0xFF, 0x02, 0xC7, 0x01, 0xFF, 0x01, 0xC7, 0x01, 0xFF, 0x01, 0xC7, 0x02, 0xFF, 0x01, 0xC7, 0x01, 0xFF, 0x01, 0xC7, 0x71, 0xFF, 0x03, 0xC7, 0x01, 0xFF, 0x01, 0xC7, 0x01, 0xFF, 0x02, 0xC7, 0x01, 0xFF, 0x01, 0xC7, 0x02, 0xFF, 0x01, 0xC7, 0x01, 0xFF, 0x01, 0xC7, 0x71, 0xFF, 0x01, 0xC7, 0x03, 0xFF, 0x01, 0xC7, 0x02, 0xFF, 0x01, 0xC7, 0x01, 0xFF, 0x01, 0xC7, 0x02, 0xFF, 0x01, 0xC7, 0x73, 0xFF, 0x03, 0xC7, 0x01, 0xFF, 0x01, 0xC7, 0x02, 0xFF, 0x01, 0xC7, 0x01, 0xFF, 0x03, 0xC7, 0x02, 0xFF, 0x01, 0xC7, 0xFF, 0xFF, 0xFF, 0xFF, 0xF9, 0xFF, 0x01, 0x10, 0x0B, 0x11, 0x74, 0xFF, 0x01, 0x10, 0x0B, 0x11, 0x74, 0xFF, 0x01, 0x10, 0x0B, 0x11, 0x74, 0xFF, 0x01, 0x10, 0x0B, 0x11, 0x75, 0xFF, 0x0B, 0x11, 0x6D, 0xFF, 0x01, 0x10, 0x12, 0x11, 0x6D, 0xFF, 0x01, 0x10, 0x12, 0x11, 0x6D, 0xFF, 0x01, 0x10, 0x12, 0x11, 0x6D, 0xFF, 0x01, 0x10, 0x12, 0x11, 0x6D, 0xFF, 0x01, 0x10, 0x12, 0x11, 0x9B, 0xFF, 0x01, 0x13, 0x09, 0x14, 0x01, 0x15, 0x40, 0xFF, 0x01, 0x10, 0x19, 0x11, 0x1B, 0xFF, 0x01, 0x13, 0x09, 0x14, 0x01, 0x15, 0x40, 0xFF, 0x01, 0x10, 0x19, 0x11, 0x0F, 0xFF, 0x01, 0x44, 0x03, 0x14, 0x01, 0x15, 0x07, 0xFF, 0x01, 0x13, 0x09, 0x14, 0x01, 0x15, 0x40, 0xFF, 0x01, 0x10, 0x19, 0x11, 0x04, 0xFF, 0x01, 0xC0, 0x01, 0xC1, 0x01, 0xC3, 0x01, 0xC4, 0x03, 0xFF, 0x01, 0x13, 0x07, 0x14, 0x01, 0x15, 0x07, 0xFF, 0x01, 0x13, 0x09, 0x14, 0x01, 0x15, 0x40, 0xFF, 0x01, 0x10, 0x19, 0x11, 0x1F, 0xFF, 0x06, 0x14, 0x01, 0x15, 0x40, 0xFF, 0x01, 0x10, 0x19, 0x11, 0x1F, 0xFF, 0x06, 0x14, 0x01, 0x15, 0x40, 0xFF, 0x01, 0x10, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x2A, 0xFF
};

const uint8_t _level_1_layer_1_compressed_data[] ={
0x01, 0x62, 0x7E, 0xFF, 0x01, 0x68, 0x01, 0x62, 0x7E, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x7E, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4E, 0xFF, 0x01, 0x83, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4D, 0xFF, 0x01, 0x80, 0x01, 0x83, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4E, 0xFF, 0x01, 0x83, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4E, 0xFF, 0x01, 0x83, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4E, 0xFF, 0x01, 0x83, 0x01, 0x80, 0x2E, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4E, 0xFF, 0x01, 0x83, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4E, 0xFF, 0x01, 0x83, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4D, 0xFF, 0x01, 0x80, 0x01, 0x83, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4E, 0xFF, 0x01, 0x83, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4E, 0xFF, 0x01, 0x8B, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x7E, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x72, 0xFF, 0x01, 0x00, 0x0A, 0x01, 0x01, 0x02, 0x01, 0x95, 0x01, 0x62, 0x7E, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x7E, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x7E, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x03, 0xFF, 0x04, 0x00, 0x47, 0xFF, 0x01, 0x83, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x02, 0xFF, 0x02, 0x00, 0x02, 0xFF, 0x02, 0x00, 0x45, 0xFF, 0x01, 0x80, 0x01, 0x93, 0x04, 0xFF, 0x01, 0x00, 0x08, 0x01, 0x01, 0x02, 0x0E, 0xFF, 0x01, 0x00, 0x06, 0x01, 0x0C, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x02, 0xFF, 0x01, 0x00, 0x04, 0xFF, 0x01, 0x00, 0x46, 0xFF, 0x01, 0x93, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x02, 0xFF, 0x02, 0x00, 0x03, 0xFF, 0x01, 0x00, 0x23, 0xFF, 0x01, 0x95, 0x11, 0xFF, 0x01, 0xB0, 0x01, 0xB1, 0x09, 0x31, 0x01, 0xB1, 0x01, 0xB2, 0x04, 0xFF, 0x01, 0x93, 0x01, 0x80, 0x2E, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x03, 0xFF, 0x01, 0x00, 0x02, 0xFF, 0x02, 0x00, 0x46, 0xFF, 0x01, 0x93, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x03, 0xFF, 0x04, 0x00, 0x30, 0xFF, 0x01, 0x55, 0x01, 0x57, 0x15, 0xFF, 0x01, 0x93, 0x2C, 0xFF, 0x01, 0x95, 0x02, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x32, 0xFF, 0x01, 0x55, 0x04, 0x56, 0x01, 0x57, 0x01, 0x67, 0x14, 0xFF, 0x01, 0x80, 0x01, 0x93, 0x2A, 0xFF, 0x01, 0x95, 0x01, 0xFF, 0x02, 0x95, 0x01, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x19, 0xFF, 0x01, 0x00, 0x09, 0x01, 0x01, 0x02, 0x0E, 0xFF, 0x01, 0x75, 0x04, 0x76, 0x01, 0x77, 0x01, 0x67, 0x15, 0xFF, 0x01, 0x93, 0x15, 0xFF, 0x01, 0x00, 0x19, 0x01, 0x01, 0x95, 0x01, 0x62, 0x2B, 0xFF, 0x01, 0x55, 0x01, 0x56, 0x01, 0x57, 0x05, 0xFF, 0x01, 0x55, 0x04, 0x56, 0x01, 0x57, 0x15, 0xFF, 0x01, 0x93, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x0D, 0xFF, 0x01, 0x03, 0x03, 0x04, 0x01, 0x05, 0x15, 0xFF, 0x01, 0x55, 0x03, 0x56, 0x01, 0x57, 0x01, 0x66, 0x01, 0x67, 0x05, 0xFF, 0x01, 0x75, 0x04, 0x76, 0x01, 0x77, 0x15, 0xFF, 0x01, 0x93, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x09, 0xFF, 0x01, 0x03, 0x02, 0x04, 0x01, 0x05, 0x1A, 0xFF, 0x01, 0x75, 0x03, 0x76, 0x01, 0x77, 0x01, 0x66, 0x01, 0x67, 0x03, 0xFF, 0x01, 0x55, 0x05, 0x56, 0x01, 0x57, 0x01, 0x67, 0x14, 0xFF, 0x01, 0x80, 0x01, 0x93, 0x1B, 0xFF, 0x01, 0x95, 0x0F, 0xFF, 0x01, 0x95, 0x03, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x2B, 0xFF, 0x01, 0x65, 0x01, 0x66, 0x01, 0x67, 0x03, 0xFF, 0x01, 0x75, 0x05, 0x76, 0x01, 0x77, 0x01, 0x67, 0x15, 0xFF, 0x01, 0x93, 0x2F, 0xFF, 0x01, 0x95, 0x1E, 0x01, 0x05, 0xFF, 0x01, 0x90, 0x08, 0xFF, 0x01, 0x65, 0x01, 0x66, 0x01, 0x67, 0x04, 0xFF, 0x01, 0x55, 0x05, 0x56, 0x01, 0x57, 0x15, 0xFF, 0x01, 0x93, 0x01, 0x80, 0x17, 0xFF, 0x01, 0x95, 0x03, 0xFF, 0x04, 0x95, 0x06, 0xFF, 0x01, 0x95, 0x08, 0xFF, 0x01, 0x95, 0x1E, 0x17, 0x04, 0xFF, 0x01, 0x90, 0x01, 0xFF, 0x01, 0x90, 0x07, 0xFF, 0x01, 0x75, 0x01, 0x76, 0x01, 0x77, 0x04, 0xFF, 0x01, 0x75, 0x05, 0x76, 0x01, 0x77, 0x15, 0xFF, 0x01, 0x83, 0x15, 0xFF, 0x1B, 0x95, 0x1E, 0x17, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF1, 0xFF
};

const uint8_t _level_1_layer_2_compressed_data[] ={
0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x7F, 0x00, 0x00, 0x00, 0xE1, 0x00, 0x05, 0x00, 0x10, 0x00, 0xD0, 0x00, 0x1F, 0x00, 0x16, 0x00, 0xD1, 0x00, 0x10, 0x00, 0x18, 0x00, 0xD1, 0x00, 0x00, 0x00, 0x1E, 0x00, 0xE2, 0x00, 0x7F, 0x00, 0x1F, 0x00, 0xE3, 0x00
};

