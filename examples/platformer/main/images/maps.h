
// This file is auto-generated by map2h.py and should not be modified manually!

#pragma once
#include <stdio.h>
#include <stdint.h>

typedef struct {
    const char * name;
    const uint32_t index;
    const uint32_t width;   // in tiles
    const uint32_t height;  // in tiles
    const uint32_t rawSize; // in bytes
    const uint32_t rawChecksum;           
    const uint32_t compressedSize;
    const uint8_t* compressedData;
} TileLayer;


const uint8_t _level_0_layer_0_compressed_data[];
const TileLayer tl_level_0_layer_0 = { "level_0_layer_0", 0, 256, 64, 16384, 0x55cacf24, 412, _level_0_layer_0_compressed_data, };

const uint8_t _level_0_layer_1_compressed_data[];
const TileLayer tl_level_0_layer_1 = { "level_0_layer_1", 1, 256, 64, 16384, 0x7d2940ab, 1400, _level_0_layer_1_compressed_data, };

const uint8_t _level_0_layer_2_compressed_data[];
const TileLayer tl_level_0_layer_2 = { "level_0_layer_2", 2, 256, 64, 504, 0xdb616dfb, 504, _level_0_layer_2_compressed_data, };

const uint8_t _level_1_layer_0_compressed_data[];
const TileLayer tl_level_1_layer_0 = { "level_1_layer_0", 3, 128, 64, 8192, 0x3e17babf, 312, _level_1_layer_0_compressed_data, };

const uint8_t _level_1_layer_1_compressed_data[];
const TileLayer tl_level_1_layer_1 = { "level_1_layer_1", 4, 128, 64, 8192, 0x12a40b4a, 620, _level_1_layer_1_compressed_data, };

const uint8_t _level_1_layer_2_compressed_data[];
const TileLayer tl_level_1_layer_2 = { "level_1_layer_2", 5, 128, 64, 42, 0x284db54a, 42, _level_1_layer_2_compressed_data, };




/*// force a compile time const without #define
enum{ allTileLayersLength = 6};
const TileLayer * allTileLayers[] = {
  &tl_level_0_layer_0,
  &tl_level_0_layer_1,
  &tl_level_0_layer_2,
  &tl_level_1_layer_0,
  &tl_level_1_layer_1,
  &tl_level_1_layer_2,
};


*/const uint8_t _level_0_layer_0_compressed_data[] ={
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x15, 0xFF, 0x05, 0x61, 0xFB, 0xFF, 0x05, 0x61, 0xFB, 0xFF, 0x05, 0x61, 0xFB, 0xFF, 0x05, 0x61, 0xFB, 0xFF, 0x05, 0x61, 0xFB, 0xFF, 0x05, 0x61, 0xF4, 0xFF, 0x0C, 0x73, 0xF4, 0xFF, 0x0C, 0x73, 0xEE, 0xFF, 0x12, 0x73, 0xEE, 0xFF, 0x12, 0x73, 0xEE, 0xFF, 0x0C, 0x73, 0xF4, 0xFF, 0x0C, 0x73, 0x8A, 0xFF, 0x01, 0xCB, 0x39, 0xFF, 0x1A, 0x14, 0x16, 0xFF, 0x15, 0x73, 0xBB, 0xFF, 0x1A, 0x14, 0x16, 0xFF, 0x15, 0x73, 0xBB, 0xFF, 0x1A, 0x14, 0x1B, 0xFF, 0x0A, 0x73, 0x02, 0x74, 0x04, 0x73, 0xAB, 0xFF, 0x0F, 0x14, 0x01, 0xFF, 0x1A, 0x14, 0x1B, 0xFF, 0x04, 0x73, 0x06, 0x74, 0x03, 0x73, 0x3C, 0xFF, 0x01, 0xC5, 0x01, 0xC6, 0x01, 0xC7, 0x01, 0xC6, 0x01, 0xC8, 0x01, 0xC9, 0x0C, 0xFF, 0x01, 0xCB, 0x5F, 0xFF, 0x0F, 0x14, 0x01, 0xFF, 0x1A, 0x14, 0x19, 0xFF, 0x0F, 0x73, 0x22, 0xFF, 0x01, 0x00, 0x07, 0x01, 0x01, 0x02, 0x83, 0xFF, 0x0F, 0x14, 0x01, 0xFF, 0x1A, 0x14, 0x19, 0xFF, 0x09, 0x73, 0x28, 0xFF, 0x01, 0x16, 0x07, 0x17, 0x01, 0x18, 0x0C, 0xFF, 0x01, 0x16, 0x0E, 0x17, 0x01, 0x18, 0x04, 0xFF, 0x0A, 0x17, 0x16, 0xFF, 0x01, 0xCA, 0x18, 0xFF, 0x01, 0xC0, 0x03, 0xC3, 0x01, 0xFF, 0x01, 0xCA, 0x34, 0xFF, 0x1A, 0x14, 0x19, 0xFF, 0x09, 0x73, 0x28, 0xFF, 0x01, 0x16, 0x07, 0x17, 0x01, 0x18, 0x0C, 0xFF, 0x01, 0x16, 0x0E, 0x17, 0x01, 0x18, 0x04, 0xFF, 0x0A, 0x17, 0x58, 0xFF, 0x2B, 0x14, 0x4A, 0xFF, 0x01, 0x16, 0x07, 0x17, 0x01, 0x18, 0x0C, 0xFF, 0x01, 0x16, 0x0E, 0x17, 0x01, 0x18, 0x04, 0xFF, 0x0A, 0x17, 0x58, 0xFF, 0x2B, 0x14, 0x4A, 0xFF, 0x01, 0x16, 0x07, 0x17, 0x01, 0x18, 0x0C, 0xFF, 0x01, 0x16, 0x0E, 0x17, 0x01, 0x18, 0x04, 0xFF, 0x0A, 0x17, 0x5E, 0xFF, 0x06, 0x14, 0x69, 0xFF, 0x01, 0x16, 0x07, 0x17, 0x01, 0x18, 0x0C, 0xFF, 0x01, 0x16, 0x0E, 0x17, 0x01, 0x18, 0x04, 0xFF, 0x0A, 0x17, 0x55, 0xFF, 0x1B, 0x14, 0x40, 0xFF, 0x01, 0xC0, 0x01, 0xC1, 0x01, 0xC2, 0x01, 0xC1, 0x01, 0xC4, 0x18, 0xFF, 0x01, 0x16, 0x07, 0x17, 0x01, 0x18, 0x0C, 0xFF, 0x01, 0x16, 0x0E, 0x17, 0x01, 0x18, 0x04, 0xFF, 0x0A, 0x17, 0x24, 0xFF, 0x01, 0xCA, 0x30, 0xFF, 0x1B, 0x14, 0xE5, 0xFF, 0x1B, 0x14, 0xE5, 0xFF, 0x1B, 0x14, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x48, 0xFF
};

const uint8_t _level_0_layer_1_compressed_data[] ={
0x01, 0x53, 0x13, 0x71, 0x01, 0x54, 0x01, 0x62, 0x69, 0xFF, 0x01, 0x68, 0x80, 0xFF, 0x01, 0x62, 0x13, 0xFF, 0x01, 0x60, 0x01, 0x62, 0x69, 0xFF, 0x01, 0x95, 0x80, 0xFF, 0x01, 0x62, 0x13, 0xFF, 0x01, 0x60, 0x01, 0x62, 0x69, 0xFF, 0x01, 0x95, 0x80, 0xFF, 0x01, 0x62, 0x13, 0xFF, 0x01, 0x70, 0x01, 0x72, 0xEA, 0xFF, 0x01, 0x62, 0xFF, 0xFF, 0x01, 0x62, 0xFF, 0xFF, 0x01, 0x62, 0xFF, 0xFF, 0x01, 0x62, 0x0C, 0x51, 0x01, 0x52, 0x04, 0x7D, 0x01, 0x50, 0x02, 0x51, 0x01, 0x52, 0x04, 0xB8, 0x10, 0xFF, 0x02, 0x95, 0x01, 0xFF, 0x01, 0x95, 0x01, 0xFF, 0x01, 0x95, 0x01, 0xFF, 0x03, 0x95, 0xCC, 0xFF, 0x01, 0x62, 0x0C, 0x61, 0x01, 0x62, 0x04, 0xFF, 0x01, 0x60, 0x02, 0x61, 0x01, 0x62, 0xEA, 0xFF, 0x01, 0x63, 0x01, 0x52, 0x0B, 0x61, 0x01, 0x62, 0x04, 0xFF, 0x01, 0x60, 0x02, 0x61, 0x01, 0x62, 0xEA, 0xFF, 0x01, 0x61, 0x01, 0x62, 0x0B, 0x61, 0x01, 0x62, 0x04, 0xFF, 0x01, 0x60, 0x02, 0x61, 0x01, 0x62, 0xEA, 0xFF, 0x01, 0x53, 0x01, 0x72, 0x0B, 0x61, 0x01, 0x62, 0x04, 0xFF, 0x01, 0x60, 0x02, 0x61, 0x01, 0x62, 0xEA, 0xFF, 0x01, 0x62, 0x05, 0x61, 0x01, 0x53, 0x06, 0x71, 0x01, 0x72, 0x03, 0x8D, 0x01, 0x50, 0x03, 0x51, 0x01, 0x52, 0xEA, 0xFF, 0x01, 0x62, 0x05, 0x61, 0x01, 0x62, 0x0A, 0xFF, 0x01, 0x60, 0x03, 0x61, 0x01, 0x62, 0x21, 0xFF, 0x05, 0x95, 0xC4, 0xFF, 0x01, 0x62, 0x05, 0x71, 0x01, 0x72, 0x0A, 0xFF, 0x01, 0x60, 0x03, 0x61, 0x01, 0x62, 0xEA, 0xFF, 0x01, 0x62, 0x10, 0xFF, 0x01, 0x60, 0x03, 0x61, 0x01, 0x62, 0xEA, 0xFF, 0x01, 0x62, 0x10, 0xFF, 0x01, 0x60, 0x03, 0x61, 0x01, 0x62, 0xEA, 0xFF, 0x01, 0x62, 0x0C, 0xFF, 0x01, 0x50, 0x04, 0x51, 0x01, 0x64, 0x02, 0x61, 0x01, 0x62, 0x70, 0xFF, 0x01, 0x9D, 0x49, 0xFF, 0x01, 0x95, 0x1A, 0x04, 0x01, 0x88, 0x14, 0xFF, 0x01, 0x62, 0x0C, 0xFF, 0x01, 0x70, 0x07, 0x71, 0x01, 0x72, 0x9C, 0xFF, 0x01, 0x85, 0x04, 0x86, 0x01, 0x87, 0x18, 0xFF, 0x01, 0x95, 0x0E, 0xFF, 0x01, 0x88, 0x0B, 0xFF, 0x01, 0x98, 0x14, 0xFF, 0x01, 0x62, 0x96, 0xFF, 0x01, 0x95, 0x38, 0xFF, 0x01, 0x95, 0x0E, 0xFF, 0x01, 0x98, 0x0B, 0xFF, 0x01, 0x98, 0x14, 0xFF, 0x01, 0x62, 0xBF, 0xFF, 0x01, 0x95, 0x08, 0x04, 0x05, 0x1D, 0x02, 0x04, 0x01, 0x95, 0x0E, 0xFF, 0x01, 0x98, 0x0B, 0xFF, 0x01, 0x98, 0x14, 0xFF, 0x01, 0x63, 0x04, 0x51, 0x01, 0x52, 0x7D, 0xFF, 0x01, 0x9D, 0x02, 0xFF, 0x01, 0x9D, 0x27, 0xFF, 0x01, 0x85, 0x02, 0x86, 0x01, 0x87, 0x0E, 0xFF, 0x01, 0x95, 0x0F, 0xFF, 0x01, 0x95, 0x0E, 0xFF, 0x01, 0x98, 0x0A, 0xFF, 0x01, 0xB0, 0x01, 0x98, 0x14, 0xFF, 0x03, 0x61, 0x01, 0x53, 0x01, 0x71, 0x01, 0x72, 0x0D, 0xFF, 0x01, 0x50, 0x01, 0x51, 0x01, 0x52, 0xAA, 0xFF, 0x01, 0x95, 0x0F, 0xFF, 0x01, 0x95, 0x0E, 0xFF, 0x01, 0x98, 0x0B, 0xFF, 0x01, 0x98, 0x14, 0xFF, 0x03, 0x61, 0x01, 0x62, 0x0F, 0xFF, 0x01, 0x60, 0x01, 0x61, 0x01, 0x62, 0x1F, 0xFF, 0x01, 0x00, 0x08, 0x01, 0x07, 0xFF, 0x01, 0xB0, 0x04, 0xB1, 0x0F, 0x01, 0x01, 0x02, 0x04, 0x0E, 0x01, 0x00, 0x08, 0x01, 0x01, 0x88, 0x58, 0xFF, 0x01, 0x95, 0x0F, 0xFF, 0x01, 0x95, 0x0D, 0xFF, 0x01, 0xB0, 0x01, 0x6D, 0x0B, 0xFF, 0x01, 0x98, 0x14, 0xFF, 0x03, 0x61, 0x01, 0x62, 0x09, 0xFF, 0x01, 0x50, 0x05, 0x51, 0x01, 0x60, 0x01, 0x61, 0x01, 0x62, 0x43, 0xFF, 0x01, 0x95, 0x04, 0x1E, 0x01, 0x95, 0x08, 0xFF, 0x01, 0x98, 0x01, 0x02, 0x42, 0xFF, 0x01, 0x85, 0x01, 0x87, 0x13, 0xFF, 0x11, 0x95, 0x0E, 0xFF, 0x01, 0x6D, 0x0A, 0xFF, 0x01, 0xB0, 0x01, 0x98, 0x14, 0xFF, 0x03, 0x61, 0x01, 0x62, 0x09, 0xFF, 0x01, 0x60, 0x05, 0x61, 0x01, 0x60, 0x01, 0x61, 0x01, 0x62, 0x43, 0xFF, 0x01, 0x95, 0x04, 0x1E, 0x01, 0x95, 0x08, 0xFF, 0x01, 0x98, 0x01, 0x18, 0x11, 0xFF, 0x01, 0xB0, 0x01, 0xB1, 0x01, 0x95, 0x0D, 0x01, 0x01, 0x80, 0x03, 0x81, 0x05, 0x3D, 0x03, 0x81, 0x01, 0x82, 0x06, 0x01, 0x01, 0x02, 0x01, 0x03, 0x09, 0x04, 0x01, 0x05, 0x0C, 0x0E, 0x01, 0x03, 0x06, 0x04, 0x01, 0x05, 0x22, 0xFF, 0x01, 0x6D, 0x0B, 0xFF, 0x01, 0x98, 0x14, 0xFF, 0x01, 0x62, 0x12, 0x51, 0x01, 0x64, 0x01, 0x61, 0x01, 0x62, 0x0E, 0xFF, 0x01, 0x9D, 0x02, 0xFF, 0x01, 0x9D, 0x02, 0xFF, 0x01, 0x9D, 0x13, 0xFF, 0x05, 0xB1, 0x01, 0xB2, 0x15, 0xFF, 0x01, 0x95, 0x04, 0x1E, 0x01, 0x95, 0x08, 0xFF, 0x01, 0x98, 0x01, 0x18, 0x13, 0x2E, 0x01, 0x26, 0x05, 0x27, 0x08, 0x17, 0x01, 0x95, 0x0B, 0xFF, 0x01, 0x95, 0x07, 0x17, 0x01, 0x13, 0x09, 0x14, 0x01, 0x15, 0x0C, 0x1E, 0x01, 0x13, 0x06, 0x14, 0x01, 0x15, 0x17, 0xFF, 0x01, 0x95, 0x0A, 0xFF, 0x01, 0x6D, 0x0B, 0xFF, 0x01, 0x98, 0x14, 0xFF, 0x01, 0x62, 0x14, 0x61, 0x01, 0x62, 0x43, 0xFF, 0x01, 0x95, 0x04, 0x1E, 0x01, 0x95, 0x08, 0xFF, 0x01, 0x98, 0x01, 0x18, 0x19, 0x3E, 0x01, 0x16, 0x07, 0x17, 0x01, 0x95, 0x0B, 0xFF, 0x01, 0x95, 0x07, 0x17, 0x01, 0x13, 0x01, 0x14, 0x01, 0x95, 0x04, 0x14, 0x01, 0x95, 0x02, 0x14, 0x01, 0x15, 0x0C, 0x1E, 0x01, 0x13, 0x06, 0x14, 0x01, 0x15, 0x01, 0x85, 0x07, 0x86, 0x01, 0x87, 0x01, 0xB6, 0x04, 0xB7, 0x01, 0xB8, 0x01, 0x85, 0x1D, 0x86, 0x01, 0x87, 0x01, 0x95, 0x14, 0xFF, 0x01, 0x62, 0x14, 0x61, 0x01, 0x62, 0x43, 0xFF, 0x01, 0x95, 0x04, 0x1E, 0x01, 0x95, 0x08, 0xFF, 0x01, 0x98, 0x01, 0x18, 0x19, 0x3E, 0x01, 0x16, 0x07, 0x17, 0x01, 0x95, 0x0B, 0xFF, 0x01, 0x95, 0x07, 0x17, 0x01, 0x13, 0x09, 0x14, 0x01, 0x15, 0x0C, 0x1E, 0x01, 0x13, 0x06, 0x14, 0x01, 0x15, 0x1B, 0xFF, 0x01, 0x95, 0x27, 0xFF, 0x01, 0x62, 0x14, 0x61, 0x01, 0x62, 0x43, 0xFF, 0x01, 0x95, 0x04, 0x1E, 0x01, 0x95, 0x08, 0xFF, 0x01, 0xA8, 0x01, 0x18, 0x19, 0x3E, 0x01, 0x16, 0x07, 0x17, 0x01, 0x95, 0x0B, 0xFF, 0x01, 0x95, 0x07, 0x17, 0x01, 0x13, 0x03, 0x14, 0x01, 0x95, 0x03, 0x14, 0x01, 0x95, 0x01, 0x14, 0x01, 0x15, 0x0C, 0x1E, 0x01, 0x13, 0x06, 0x14, 0x01, 0x15, 0x1B, 0xFF, 0x01, 0x95, 0x27, 0xFF, 0x59, 0x01, 0x01, 0x02, 0x04, 0x1E, 0x01, 0x00, 0x08, 0x01, 0x01, 0x41, 0x01, 0x18, 0x19, 0x3E, 0x01, 0x16, 0x02, 0x17, 0x01, 0x95, 0x02, 0x17, 0x01, 0x95, 0x01, 0x17, 0x01, 0x95, 0x01, 0x00, 0x09, 0x01, 0x01, 0x02, 0x01, 0x95, 0x07, 0x17, 0x01, 0x13, 0x09, 0x14, 0x01, 0x15, 0x0C, 0x1E, 0x01, 0x13, 0x06, 0x14, 0x01, 0x15, 0x1B, 0xFF, 0x01, 0x95, 0x27, 0xFF, 0x3A, 0x17, 0x01, 0x95, 0x15, 0x17, 0x01, 0x95, 0x08, 0x17, 0x01, 0x18, 0x04, 0x1E, 0x01, 0x16, 0x06, 0x17, 0x01, 0x95, 0x02, 0x17, 0x01, 0x18, 0x19, 0x3E, 0x01, 0x16, 0x01, 0x17, 0x01, 0x95, 0x01, 0x17, 0x01, 0x95, 0x01, 0x17, 0x02, 0x95, 0x0B, 0x17, 0x01, 0x18, 0x08, 0x17, 0x01, 0x13, 0x09, 0x14, 0x01, 0x15, 0x0C, 0x1E, 0x01, 0x13, 0x06, 0x14, 0x01, 0x15, 0x1B, 0xFF, 0x01, 0x95, 0x27, 0xFF, 0x3F, 0x17, 0x01, 0x95, 0x19, 0x17, 0x01, 0x18, 0x04, 0x95, 0x01, 0x16, 0x04, 0x17, 0x01, 0x95, 0x04, 0x17, 0x01, 0x18, 0x35, 0x95, 0x01, 0x13, 0x09, 0x14, 0x01, 0x15, 0x0C, 0x95, 0x01, 0x13, 0x06, 0x14, 0x01, 0x15, 0x1C, 0x95, 0x27, 0xFF, 0x19, 0x90, 0x18, 0xFF, 0x02, 0x90, 0xCD, 0xFF, 0x02, 0x90, 0x16, 0xFF, 0x01, 0x90, 0x18, 0xFF, 0x02, 0x90, 0xCD, 0xFF, 0x02, 0x90, 0x16, 0xFF, 0x01, 0x90, 0x17, 0xFF, 0x03, 0x90, 0xCD, 0xFF, 0x02, 0x90, 0x16, 0xFF, 0x01, 0x90, 0x17, 0xFF, 0x03, 0x90, 0xCD, 0xFF, 0x02, 0x90, 0x16, 0xFF, 0x01, 0x90, 0x16, 0xFF, 0x04, 0x90, 0xCD, 0xFF, 0x02, 0x90, 0x16, 0xFF, 0x01, 0x90, 0x16, 0xFF, 0x04, 0x90, 0xCD, 0xFF, 0x02, 0x90, 0x16, 0xFF, 0x01, 0x90, 0x10, 0xFF, 0x0A, 0x90, 0xCD, 0xFF, 0x02, 0x90, 0x16, 0xFF, 0x01, 0x90, 0x0F, 0xFF, 0x02, 0x90, 0x01, 0xFF, 0x01, 0x90, 0x07, 0xFF, 0x0E, 0x90, 0xBF, 0xFF, 0x02, 0x90, 0x16, 0xFF, 0x01, 0x90, 0x0D, 0xFF, 0x03, 0x90, 0x02, 0xFF, 0x01, 0x90, 0x14, 0xFF, 0x01, 0x90, 0xBF, 0xFF, 0x02, 0x90, 0x16, 0xFF, 0x01, 0x90, 0x0C, 0xFF, 0x02, 0x90, 0x04, 0xFF, 0x01, 0x90, 0x14, 0xFF, 0x01, 0x90, 0xBF, 0xFF, 0x02, 0x90, 0x16, 0xFF, 0x01, 0x90, 0x0B, 0xFF, 0x02, 0x90, 0x05, 0xFF, 0x01, 0x90, 0x14, 0xFF, 0x01, 0x90, 0xBF, 0xFF, 0x02, 0x90, 0x16, 0xFF, 0x14, 0x90, 0x14, 0xFF, 0x01, 0x90, 0xBF, 0xFF, 0x02, 0x90, 0x3E, 0xFF, 0x01, 0x90, 0xBF, 0xFF, 0x02, 0x90, 0x3E, 0xFF, 0x01, 0x90, 0xBF, 0xFF, 0x02, 0x90, 0x3E, 0xFF, 0x01, 0x90, 0xBF, 0xFF, 0x02, 0x90, 0x16, 0xFF, 0x14, 0x90, 0x14, 0xFF, 0x01, 0x90, 0xBF, 0xFF, 0x02, 0x90, 0x16, 0xFF, 0x01, 0x90, 0x12, 0xFF, 0x03, 0x90, 0x12, 0xFF, 0x01, 0x90, 0xBF, 0xFF, 0x02, 0x90, 0x16, 0xFF, 0x01, 0x90, 0x12, 0xFF, 0x04, 0x90, 0x11, 0xFF, 0x01, 0x90, 0xBF, 0xFF, 0x02, 0x90, 0x16, 0xFF, 0x01, 0x90, 0x12, 0xFF, 0x05, 0x90, 0x10, 0xFF, 0x01, 0x90, 0xBF, 0xFF, 0x19, 0x90, 0x12, 0xFF, 0x06, 0x90, 0x0F, 0xFF, 0x01, 0x90, 0xEA, 0xFF, 0x07, 0x90, 0x0E, 0xFF, 0x01, 0x90, 0xEA, 0xFF, 0x08, 0x90, 0x0D, 0xFF, 0x01, 0x90, 0xEA, 0xFF, 0x09, 0x90, 0x0C, 0xFF, 0x01, 0x90, 0xEA, 0xFF, 0x0A, 0x90, 0x0B, 0xFF, 0x01, 0x90, 0xEA, 0xFF, 0x0B, 0x90, 0x0A, 0xFF, 0x01, 0x90, 0xEA, 0xFF, 0x0C, 0x90, 0x09, 0xFF, 0x01, 0x90, 0xEA, 0xFF, 0x0C, 0x90, 0x09, 0xFF, 0x01, 0x90, 0xEA, 0xFF, 0x16, 0x90, 0xFF, 0xFF, 0xFF, 0xFF, 0xC1, 0xFF, 0x01, 0x85, 0x7E, 0x86, 0x01, 0x87, 0x80, 0xFF
};

const uint8_t _level_0_layer_2_compressed_data[] ={
0x00, 0x00, 0x00, 0x00, 0xD5, 0x00, 0x14, 0x00, 0x00, 0x00, 0xE1, 0x00, 0x15, 0x00, 0x00, 0x00, 0xD5, 0x00, 0x9D, 0x00, 0x00, 0x00, 0xE5, 0x00, 0x9E, 0x00, 0x00, 0x00, 0xD5, 0x00, 0x0B, 0x00, 0x04, 0x00, 0xD8, 0x00, 0x2C, 0x00, 0x04, 0x00, 0xD7, 0x00, 0x31, 0x00, 0x04, 0x00, 0xD7, 0x00, 0x05, 0x00, 0x05, 0x00, 0xE0, 0x00, 0x06, 0x00, 0x05, 0x00, 0xD4, 0x00, 0x0B, 0x00, 0x05, 0x00, 0xD8, 0x00, 0x1C, 0x00, 0x07, 0x00, 0xE8, 0x00, 0x1D, 0x00, 0x07, 0x00, 0xE1, 0x00, 0x1E, 0x00, 0x07, 0x00, 0xD6, 0x00, 0x20, 0x00, 0x07, 0x00, 0xD6, 0x00, 0x22, 0x00, 0x07, 0x00, 0xD6, 0x00, 0x39, 0x00, 0x0C, 0x00, 0xD7, 0x00, 0x0D, 0x00, 0x0F, 0x00, 0xD7, 0x00, 0x0F, 0x00, 0x0F, 0x00, 0xD7, 0x00, 0x39, 0x00, 0x0F, 0x00, 0xD7, 0x00, 0x6B, 0x00, 0x12, 0x00, 0xD7, 0x00, 0x03, 0x00, 0x13, 0x00, 0xD7, 0x00, 0x4D, 0x00, 0x13, 0x00, 0xD7, 0x00, 0x52, 0x00, 0x13, 0x00, 0xD7, 0x00, 0x56, 0x00, 0x13, 0x00, 0xD7, 0x00, 0x67, 0x00, 0x13, 0x00, 0xD7, 0x00, 0x6D, 0x00, 0x14, 0x00, 0xD7, 0x00, 0xE5, 0x00, 0x14, 0x00, 0xD7, 0x00, 0x39, 0x00, 0x15, 0x00, 0xF0, 0x00, 0xAB, 0x00, 0x15, 0x00, 0xD7, 0x00, 0xAC, 0x00, 0x15, 0x00, 0xD7, 0x00, 0xD4, 0x00, 0x15, 0x00, 0xD7, 0x00, 0xD8, 0x00, 0x15, 0x00, 0xD7, 0x00, 0xDC, 0x00, 0x15, 0x00, 0xD7, 0x00, 0x28, 0x00, 0x16, 0x00, 0xD7, 0x00, 0xAB, 0x00, 0x16, 0x00, 0xF0, 0x00, 0xC5, 0x00, 0x16, 0x00, 0xD7, 0x00, 0xC8, 0x00, 0x16, 0x00, 0xD7, 0x00, 0xCB, 0x00, 0x16, 0x00, 0xD7, 0x00, 0xE2, 0x00, 0x16, 0x00, 0xD7, 0x00, 0xE8, 0x00, 0x16, 0x00, 0xD7, 0x00, 0x6F, 0x00, 0x17, 0x00, 0xD7, 0x00, 0xE5, 0x00, 0x18, 0x00, 0xD7, 0x00, 0xC5, 0x00, 0x19, 0x00, 0xF2, 0x00, 0x50, 0x00, 0x1B, 0x00, 0xD7, 0x00, 0x55, 0x00, 0x1B, 0x00, 0xD7, 0x00, 0x60, 0x00, 0x1B, 0x00, 0xD8, 0x00, 0x1D, 0x00, 0x1C, 0x00, 0xD0, 0x00, 0x63, 0x00, 0x1C, 0x00, 0xE0, 0x00, 0x64, 0x00, 0x1C, 0x00, 0xD4, 0x00, 0x8E, 0x00, 0x1C, 0x00, 0xE1, 0x00, 0x8F, 0x00, 0x1C, 0x00, 0xD4, 0x00, 0x13, 0x00, 0x1D, 0x00, 0xE0, 0x00, 0x14, 0x00, 0x1D, 0x00, 0xD5, 0x00, 0x7E, 0x00, 0x1D, 0x00, 0xD7, 0x00, 0x6D, 0x00, 0x1E, 0x00, 0xD7, 0x00, 0x73, 0x00, 0x1E, 0x00, 0xD7, 0x00, 0x78, 0x00, 0x1E, 0x00, 0xD7, 0x00, 0xC0, 0x00, 0x1E, 0x00, 0xD7, 0x00, 0xC3, 0x00, 0x1E, 0x00, 0xD7, 0x00, 0xC7, 0x00, 0x1E, 0x00, 0xD7, 0x00, 0xD1, 0x00, 0x1E, 0x00, 0xE2, 0x00, 0xD2, 0x00, 0x1E, 0x00, 0xD4, 0x00, 0x9C, 0x00, 0x20, 0x00, 0xE1, 0x00, 0x9D, 0x00, 0x20, 0x00, 0xD5, 0x00, 0xEF, 0x00, 0x20, 0x00, 0xE5, 0x00, 0xF0, 0x00, 0x20, 0x00, 0xD5, 0x00, 0x00, 0x00, 0x21, 0x00, 0xE2, 0x00, 0x01, 0x00, 0x21, 0x00, 0xD5, 0x00, 0x18, 0x00, 0x21, 0x00, 0xE3, 0x00, 0x19, 0x00, 0x21, 0x00, 0xD5, 0x00, 0x2A, 0x00, 0x21, 0x00, 0xE4, 0x00, 0x2B, 0x00, 0x21, 0x00, 0xD5, 0x00, 0x2A, 0x00, 0x30, 0x00, 0xE3, 0x00, 0x2B, 0x00, 0x30, 0x00, 0xD5, 0x00, 0x05, 0x00, 0x32, 0x00, 0xF1, 0x00, 0x0F, 0x00, 0x32, 0x00, 0xE1, 0x00, 0x10, 0x00, 0x32, 0x00, 0xD4, 0x00, 0x17, 0x00, 0x34, 0x00, 0xE2, 0x00, 0x18, 0x00, 0x34, 0x00, 0xD5, 0x00, 0x3B, 0x00, 0x3A, 0x00, 0xE2, 0x00, 0x3C, 0x00, 0x3A, 0x00, 0xD4, 0x00, 0x3F, 0x00, 0x3C, 0x00, 0xE4, 0x00, 0x40, 0x00, 0x3C, 0x00, 0xD5, 0x00
};

const uint8_t _level_1_layer_0_compressed_data[] ={
0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0x03, 0xC7, 0x01, 0xFF, 0x01, 0xC7, 0x02, 0xFF, 0x01, 0xC7, 0x01, 0xFF, 0x03, 0xC7, 0x02, 0xFF, 0x01, 0xC7, 0x71, 0xFF, 0x01, 0xC7, 0x03, 0xFF, 0x02, 0xC7, 0x01, 0xFF, 0x01, 0xC7, 0x01, 0xFF, 0x01, 0xC7, 0x02, 0xFF, 0x01, 0xC7, 0x01, 0xFF, 0x01, 0xC7, 0x71, 0xFF, 0x03, 0xC7, 0x01, 0xFF, 0x01, 0xC7, 0x01, 0xFF, 0x02, 0xC7, 0x01, 0xFF, 0x01, 0xC7, 0x02, 0xFF, 0x01, 0xC7, 0x01, 0xFF, 0x01, 0xC7, 0x71, 0xFF, 0x01, 0xC7, 0x03, 0xFF, 0x01, 0xC7, 0x02, 0xFF, 0x01, 0xC7, 0x01, 0xFF, 0x01, 0xC7, 0x02, 0xFF, 0x01, 0xC7, 0x73, 0xFF, 0x03, 0xC7, 0x01, 0xFF, 0x01, 0xC7, 0x02, 0xFF, 0x01, 0xC7, 0x01, 0xFF, 0x03, 0xC7, 0x02, 0xFF, 0x01, 0xC7, 0xFF, 0xFF, 0xFF, 0xFF, 0xF9, 0xFF, 0x01, 0x10, 0x0B, 0x11, 0x74, 0xFF, 0x01, 0x10, 0x0B, 0x11, 0x74, 0xFF, 0x01, 0x10, 0x0B, 0x11, 0x74, 0xFF, 0x01, 0x10, 0x0B, 0x11, 0x75, 0xFF, 0x0B, 0x11, 0x6D, 0xFF, 0x01, 0x10, 0x12, 0x11, 0x6D, 0xFF, 0x01, 0x10, 0x12, 0x11, 0x6D, 0xFF, 0x01, 0x10, 0x12, 0x11, 0x6D, 0xFF, 0x01, 0x10, 0x12, 0x11, 0x6D, 0xFF, 0x01, 0x10, 0x12, 0x11, 0x9B, 0xFF, 0x01, 0x13, 0x09, 0x14, 0x01, 0x15, 0x40, 0xFF, 0x01, 0x10, 0x19, 0x11, 0x1B, 0xFF, 0x01, 0x13, 0x09, 0x14, 0x01, 0x15, 0x40, 0xFF, 0x01, 0x10, 0x19, 0x11, 0x0F, 0xFF, 0x01, 0x44, 0x03, 0x14, 0x01, 0x15, 0x07, 0xFF, 0x01, 0x13, 0x09, 0x14, 0x01, 0x15, 0x40, 0xFF, 0x01, 0x10, 0x19, 0x11, 0x04, 0xFF, 0x01, 0xC0, 0x01, 0xC1, 0x01, 0xC3, 0x01, 0xC4, 0x03, 0xFF, 0x01, 0x13, 0x07, 0x14, 0x01, 0x15, 0x07, 0xFF, 0x01, 0x13, 0x09, 0x14, 0x01, 0x15, 0x40, 0xFF, 0x01, 0x10, 0x19, 0x11, 0x1F, 0xFF, 0x06, 0x14, 0x01, 0x15, 0x40, 0xFF, 0x01, 0x10, 0x19, 0x11, 0x1F, 0xFF, 0x06, 0x14, 0x01, 0x15, 0x40, 0xFF, 0x01, 0x10, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x2A, 0xFF
};

const uint8_t _level_1_layer_1_compressed_data[] ={
0x01, 0x62, 0x7E, 0xFF, 0x01, 0x68, 0x01, 0x62, 0x7E, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x7E, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4E, 0xFF, 0x01, 0x83, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4D, 0xFF, 0x01, 0x80, 0x01, 0x83, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4E, 0xFF, 0x01, 0x83, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4E, 0xFF, 0x01, 0x83, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4E, 0xFF, 0x01, 0x83, 0x01, 0x80, 0x2E, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4E, 0xFF, 0x01, 0x83, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4E, 0xFF, 0x01, 0x83, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4D, 0xFF, 0x01, 0x80, 0x01, 0x83, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4E, 0xFF, 0x01, 0x83, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x4E, 0xFF, 0x01, 0x8B, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x7E, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x72, 0xFF, 0x01, 0x00, 0x0A, 0x01, 0x01, 0x02, 0x01, 0x95, 0x01, 0x62, 0x7E, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x7E, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x7E, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x03, 0xFF, 0x04, 0x00, 0x47, 0xFF, 0x01, 0x83, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x02, 0xFF, 0x02, 0x00, 0x02, 0xFF, 0x02, 0x00, 0x45, 0xFF, 0x01, 0x80, 0x01, 0x93, 0x04, 0xFF, 0x01, 0x00, 0x08, 0x01, 0x01, 0x02, 0x0E, 0xFF, 0x01, 0x00, 0x06, 0x01, 0x0C, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x02, 0xFF, 0x01, 0x00, 0x04, 0xFF, 0x01, 0x00, 0x46, 0xFF, 0x01, 0x93, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x02, 0xFF, 0x02, 0x00, 0x03, 0xFF, 0x01, 0x00, 0x23, 0xFF, 0x01, 0x95, 0x11, 0xFF, 0x01, 0xB0, 0x01, 0xB1, 0x09, 0x31, 0x01, 0xB1, 0x01, 0xB2, 0x04, 0xFF, 0x01, 0x93, 0x01, 0x80, 0x2E, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x03, 0xFF, 0x01, 0x00, 0x02, 0xFF, 0x02, 0x00, 0x46, 0xFF, 0x01, 0x93, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x03, 0xFF, 0x04, 0x00, 0x30, 0xFF, 0x01, 0x55, 0x01, 0x57, 0x15, 0xFF, 0x01, 0x93, 0x2C, 0xFF, 0x01, 0x95, 0x02, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x32, 0xFF, 0x01, 0x55, 0x04, 0x56, 0x01, 0x57, 0x01, 0x67, 0x14, 0xFF, 0x01, 0x80, 0x01, 0x93, 0x2A, 0xFF, 0x01, 0x95, 0x01, 0xFF, 0x02, 0x95, 0x01, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x19, 0xFF, 0x01, 0x00, 0x09, 0x01, 0x01, 0x02, 0x0E, 0xFF, 0x01, 0x75, 0x04, 0x76, 0x01, 0x77, 0x01, 0x67, 0x15, 0xFF, 0x01, 0x93, 0x15, 0xFF, 0x01, 0x00, 0x19, 0x01, 0x01, 0x95, 0x01, 0x62, 0x2B, 0xFF, 0x01, 0x55, 0x01, 0x56, 0x01, 0x57, 0x05, 0xFF, 0x01, 0x55, 0x04, 0x56, 0x01, 0x57, 0x15, 0xFF, 0x01, 0x93, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x0D, 0xFF, 0x01, 0x03, 0x03, 0x04, 0x01, 0x05, 0x15, 0xFF, 0x01, 0x55, 0x03, 0x56, 0x01, 0x57, 0x01, 0x66, 0x01, 0x67, 0x05, 0xFF, 0x01, 0x75, 0x04, 0x76, 0x01, 0x77, 0x15, 0xFF, 0x01, 0x93, 0x2F, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x09, 0xFF, 0x01, 0x03, 0x02, 0x04, 0x01, 0x05, 0x1A, 0xFF, 0x01, 0x75, 0x03, 0x76, 0x01, 0x77, 0x01, 0x66, 0x01, 0x67, 0x03, 0xFF, 0x01, 0x55, 0x05, 0x56, 0x01, 0x57, 0x01, 0x67, 0x14, 0xFF, 0x01, 0x80, 0x01, 0x93, 0x1B, 0xFF, 0x01, 0x95, 0x0F, 0xFF, 0x01, 0x95, 0x03, 0xFF, 0x01, 0x95, 0x01, 0x62, 0x2B, 0xFF, 0x01, 0x65, 0x01, 0x66, 0x01, 0x67, 0x03, 0xFF, 0x01, 0x75, 0x05, 0x76, 0x01, 0x77, 0x01, 0x67, 0x15, 0xFF, 0x01, 0x93, 0x2F, 0xFF, 0x01, 0x95, 0x1E, 0x01, 0x05, 0xFF, 0x01, 0x90, 0x08, 0xFF, 0x01, 0x65, 0x01, 0x66, 0x01, 0x67, 0x04, 0xFF, 0x01, 0x55, 0x05, 0x56, 0x01, 0x57, 0x15, 0xFF, 0x01, 0x93, 0x01, 0x80, 0x17, 0xFF, 0x01, 0x95, 0x03, 0xFF, 0x04, 0x95, 0x06, 0xFF, 0x01, 0x95, 0x08, 0xFF, 0x01, 0x95, 0x1E, 0x17, 0x04, 0xFF, 0x01, 0x90, 0x01, 0xFF, 0x01, 0x90, 0x07, 0xFF, 0x01, 0x75, 0x01, 0x76, 0x01, 0x77, 0x04, 0xFF, 0x01, 0x75, 0x05, 0x76, 0x01, 0x77, 0x15, 0xFF, 0x01, 0x83, 0x15, 0xFF, 0x1B, 0x95, 0x1E, 0x17, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF1, 0xFF
};

const uint8_t _level_1_layer_2_compressed_data[] ={
0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x7F, 0x00, 0x00, 0x00, 0xE1, 0x00, 0x05, 0x00, 0x10, 0x00, 0xD0, 0x00, 0x1F, 0x00, 0x16, 0x00, 0xD1, 0x00, 0x10, 0x00, 0x18, 0x00, 0xD1, 0x00, 0x00, 0x00, 0x1E, 0x00, 0xE2, 0x00, 0x7F, 0x00, 0x1F, 0x00, 0xE3, 0x00
};

